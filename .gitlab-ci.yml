variables:  
 REMOTE_NGINX_CONFIG: "/etc/nginx/sites-enabled/"
 REMOTE_NGINX_CONFIG_FILE: "name-your-site.conf"
 REMOTE_SYSTEMD_CONFIG: "/etc/systemd/system/"
 REMOTE_USER: "root"
  
 REMOTE_APP_BIN_PATH: "/var/www/name-your-startup.site"  
 REMOTE_APP_SVC_NAME: "name-your-site.service"
 REMOTE_APP_LOGS_PATH: "/var/www/name-your-startup.site/logs"
 REMOTE_APP_SUPERVISOR: "name-your-site"

 PACKAGE_PATH: "/sources/nys.selfhosted/bin/Release/"

 # production
 PROD_CONFIG_DIR: "/deployment/production"
 PROD_REMOTE_HOST: "name-your-startup.site"
 PROD_REMOTE_APP_STATUS_CHECK_URL: "https://name-your-startup.site/"
  
   
stages:
 - build 
 - deploy
 - verify

build:
 stage: build
 only:
  - master
  - develop
 tags: 
  - mono
  - deb
 before_script:
  - echo 'Checking the requirements...'
  - command -v mono >/dev/null 2>&1 || { echo >&2 "mono is required. Aborting."; exit 1; }
  - command -v xbuild >/dev/null 2>&1 || { echo >&2 "xbuild is required. Aborting."; exit 1; }
  - command -v nuget >/dev/null 2>&1 || { echo >&2 "nuget is required. Aborting."; exit 1; }
 script:  
  - echo '- restore nuget packages'
  - cd sources
  - nuget restore -NonInteractive  
  - echo '- build solution'
  - MONO_IOMAP=case xbuild /t:Build /p:Configuration="Release" /p:Platform="Any CPU" nys.sln
  - mkdir -p "$CI_PROJECT_DIR/build/app"
  - mv $CI_PROJECT_DIR$PACKAGE_PATH* $CI_PROJECT_DIR/build/app/
 artifacts:
  name: "app_${CI_PROJECT_NAME}_${CI_BUILD_REF_NAME}_${CI_BUILD_REF}"
  when: on_success
  expire_in: 1 week
  paths:
   - build/app


deploy_app:
 stage: deploy
 only:
  - master
 tags:
  - ssh
  - mono
 environment: production
 script:
  - echo 'Deployment of the main package started'
  - ssh $REMOTE_USER@$REMOTE_HOST "supervisorctl stop $REMOTE_APP_SUPERVISOR"
  - echo 'Copy app to remote server...'
  - rsync -zaIvc --stats $CI_PROJECT_DIR/build/app/ $REMOTE_USER@$REMOTE_HOST:$REMOTE_APP_BIN_PATH
  # - ssh $REMOTE_USER@$REMOTE_HOST "exit 1" && echo $?;
  - ssh $REMOTE_USER@$REMOTE_HOST "chown -R www-data:www-data $REMOTE_APP_BIN_PATH" && echo $?;
  - ssh $REMOTE_USER@$REMOTE_HOST "supervisorctl start $REMOTE_APP_SUPERVISOR" && echo $?;


verify_api_status:
 stage: verify
 only:
  - master
 tags:
  - ssh
  - mono
 environment: production
 script:
  - ssh $REMOTE_USER@$REMOTE_HOST "supervisorctl status $REMOTE_APP_SUPERVISOR | grep -q 'RUNNING'" && echo $?;  